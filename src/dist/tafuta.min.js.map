{"version":3,"sources":["tafuta.js"],"names":["mongoose","require","connect","connect2","then","console","log"],"mappings":"aACA,IAAMA,SAAWC,QAAQ,YAAnBD,SAAWC,SAAQC,QAAzB,8BAOCC,SAAAC,KAMO,WACJC,QAAYC,IAAA,+BAPf,MAMO,WACJD,QAAQC,IAAI","file":"tafuta.min.js","sourcesContent":["\r\nconst mongoose = require('mongoose');\r\nconst connect2 = mongoose.connect(\"mongodb://localhost:27017/\");\r\n\r\n\r\n\r\n\r\n//check database connected or not\r\n connect2.then(() => {\r\n      console.log(\"Tafuta database connected\");\r\n\r\n\r\n\r\n })\r\n .catch(() => {\r\n    console.log(\"Tafuta not connected\")\r\n\r\n})\r\n\r\n/*\r\n// Define Vendor schema\r\nconst VendorSchema = new mongoose.Schema({\r\n    name: String,\r\n    description: String,\r\n    \r\n    // Add more fields as needed\r\n});\r\n/*\r\nconst collection2 = new mongoose.model(\"Vendors\",VendorSchema);\r\n module.exports = collection2;\r\n const express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst multer = require('multer');\r\n\r\nconst app = express();\r\n\r\n\r\n// Connect to MongoDB\r\nmongoose.connect('mongodb://localhost:27017/KYC', { useNewUrlParser: true, useUnifiedTopology: true });\r\nconst db = mongoose.connection;\r\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\n// Define the vendor schema\r\nconst vendorSchema = new mongoose.Schema({\r\n  vendorID: String,\r\n  businessName: String,\r\n  description: String,\r\n  location: String,\r\n  businessHoursStart: String,\r\n  businessHoursEnd: String,\r\n  contact: String,\r\n  socialMediaLinks: [String],\r\n  businessCertificate: String,\r\n  tin: String\r\n});\r\n\r\n\r\n\r\n// Set up multer for file uploads\r\nconst storage = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, 'uploads/')\r\n  },\r\n  filename: function (req, file, cb) {\r\n    cb(null, file.fieldname + '-' + Date.now())\r\n  }\r\n});\r\n\r\nconst upload = multer({ storage: storage });\r\n\r\n// Handle form submission\r\napp.post('/verification', upload.single('businessCertificate'), async (req, res) => {\r\n  try {\r\n    const vendorData = req.body;\r\n    vendorData.socialMediaLinks = [req.body.socialMediaLink1, req.body.socialMediaLink2];\r\n    vendorData.businessCertificate = req.file.filename;\r\n\r\n    const vendor = new Vendor(vendorData);\r\n    await vendor.save();\r\n\r\n    res.send('Vendor information submitted successfully!');\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send('Error submitting vendor information');\r\n  }\r\n});\r\nconst Vendor = mongoose.model('Vendor', vendorSchema);\r\n \r\n\r\n module.exports = Vendor;\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n"]}